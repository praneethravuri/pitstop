name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: uv sync

      - name: Run tests
        run: uv run python test_runner.py

      - name: Extract version from tag
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            COMMITS=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi

          # Create changelog
          cat > RELEASE_NOTES.md << EOF
          ## What's Changed

          ${COMMITS}

          ## Installation

          \`\`\`bash
          git clone https://github.com/praneethravuri/pitstop.git
          cd pitstop
          git checkout v${{ steps.get_version.outputs.VERSION }}
          uv sync
          \`\`\`

          ## Data Sources (All FREE)
          - FastF1: Session data, telemetry, weather (2018-present)
          - OpenF1 API: Real-time timing, radio, pit stops (2023-present)
          - Ergast API: Historical data (1950-2024)
          - RSS Feeds: News from 12+ sources

          ## 24 Tools Available
          100% Free - No API keys required!
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
